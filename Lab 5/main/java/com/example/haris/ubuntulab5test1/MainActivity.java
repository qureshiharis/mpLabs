package com.example.haris.ubuntulab5test1;

import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.GestureDetector;
import android.view.MotionEvent;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.Toast;

public class MainActivity extends AppCompatActivity implements GestureDetector.OnGestureListener {

    ImageView myImageView;
    int[] myImageArray = { R.drawable.logo1 , R.drawable.logo2 , R.drawable.logo3 , R.drawable.logo4 , R.drawable.logo5 };

    // TASK 1 declarations
    int counter = 0;
    GestureDetector myGestureDetector;

    // TASK 2 declarations
    SensorManager mySensorManager;
    Sensor myProxSensor;
    SensorEventListener myProxSensorEventListener;

    // TASK 3 declarations
    Sensor myGyroscopeSensor;
    SensorEventListener myGyroscopeEventListener;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        myImageView = findViewById(R.id.my_imageview);

        // FOR TASK 1
        myGestureDetector = new GestureDetector(this);

        // FOR TASK 2
        mySensorManager = (SensorManager) getSystemService(SENSOR_SERVICE);
        myProxSensor = mySensorManager.getDefaultSensor(Sensor.TYPE_PROXIMITY);

        // FOR TASK 3
        myGyroscopeSensor = mySensorManager.getDefaultSensor(Sensor.TYPE_GYROSCOPE);

        //////////////////// TASK 2 ///////////////////////////////

        // setting event listener
        myProxSensorEventListener = new SensorEventListener() {

            // autogenerated methods to override
            @Override
            public void onSensorChanged(SensorEvent event) {

                ViewGroup.LayoutParams originalParams = (ViewGroup.LayoutParams) myImageView.getLayoutParams();

                if (event.values[0] < myProxSensor.getMaximumRange()) {

                    // set imageview to smaller size
                    ViewGroup.LayoutParams smallParams = (ViewGroup.LayoutParams) myImageView.getLayoutParams();
                    smallParams.width = 300;

                    myImageView.setLayoutParams(smallParams);

                    Toast.makeText(getApplicationContext(), "PROX SENSOR WORKING", Toast.LENGTH_SHORT).show();

                } else {

                    // set imageview to original size
                    originalParams.width = 600;
                    myImageView.setLayoutParams(originalParams);
                }

            }

            @Override
            public void onAccuracyChanged(Sensor sensor, int accuracy) {

            }
        };

        // register listener
        mySensorManager.registerListener(myProxSensorEventListener, myProxSensor, 2 * 1000 * 1000);

        ////////////////////// END OF TASK 2 ////////////////////////////

        /////////////////////// TASK 3 ////////////////////

        // setting event listener for gyroscope
        myGyroscopeEventListener = new SensorEventListener() {

            // autogenerated methods
            @Override
            public void onSensorChanged(SensorEvent event) {

                if(event.values[2] > 0.5f) {

                    if(counter!=4) {
                        counter++;
                        myImageView.setImageResource(myImageArray[counter]);
                    }

                } else if(event.values[2] < -0.5f) {

                    if(counter!=0) {
                        counter--;
                        myImageView.setImageResource(myImageArray[counter]);

                    }
                }

            }

            @Override
            public void onAccuracyChanged(Sensor sensor, int accuracy) {

            }
        };

        //register listener
        mySensorManager.registerListener(myGyroscopeEventListener,
                myGyroscopeSensor, SensorManager.SENSOR_DELAY_NORMAL);

        //////////////////// END OF TASK 3 ///////////////////////

    } // END OF onCreate() method



    ///////////////// TASK 1 ////////////////////////////
    // GESTURE METHODS START

    @Override
    protected void onPause() {
        super.onPause();
        mySensorManager.unregisterListener(myProxSensorEventListener);
    }

    @Override
    public boolean onTouchEvent(MotionEvent event) {

        // overriding this method so we can handle touch events (like fling)

        myGestureDetector.onTouchEvent(event);

        return super.onTouchEvent(event);
    }

    @Override
    public boolean onDown(MotionEvent e) {
        return false;
    }

    @Override
    public void onShowPress(MotionEvent e) {

    }

    @Override
    public boolean onSingleTapUp(MotionEvent e) {
        return false;
    }

    @Override
    public boolean onScroll(MotionEvent e1, MotionEvent e2, float distanceX, float distanceY) {
        return false;
    }

    @Override
    public void onLongPress(MotionEvent e) {

    }

    @Override
    public boolean onFling(MotionEvent downEvent, MotionEvent moveEvent, float velocityX, float velocityY) {

        // getting the movements

        float differenceY = moveEvent.getY() - downEvent.getY();
        float differenceX = moveEvent.getX() - downEvent.getX();

        // if it is on x axis only (meaning x axis movement is greater so work only on that condition)
        if(Math.abs(differenceX) > Math.abs(differenceY)) {

            // only detect gesture on a certain speed or movement of pixels, we dont want accidental touches or tap to be detected
            if(Math.abs(differenceX) > 20 && Math.abs(differenceY) > 20 ) {

                if(differenceX > 0) {

                    // fling right
                    // if not already on end then go forward
                    if(counter!=4) {

                        counter++;
                        myImageView.setImageResource(myImageArray[counter]);
                        Toast.makeText(getApplicationContext(), "FLING RIGHT", Toast.LENGTH_SHORT).show();
                    }

                    // else toast you are already at the end
                    else {

                        Toast.makeText(getApplicationContext(), "END", Toast.LENGTH_SHORT).show();

                    }

                } else {

                    // fling left
                    // if not already at start then go back
                    if(counter!=0) {

                        counter--;
                        myImageView.setImageResource(myImageArray[counter]);
                        Toast.makeText(getApplicationContext(), "FLING LEFT", Toast.LENGTH_SHORT).show();

                    }

                    // else toast you are already at the start
                    else {

                        Toast.makeText(getApplicationContext(), "START", Toast.LENGTH_SHORT).show();

                    }
                }
            }
        }

        return true;

    } // end of onFling method

    ////////////////////// END OF TASK 1 ///////////////////

} // end of class
